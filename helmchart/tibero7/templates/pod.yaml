apiVersion: v1
kind: Pod
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app: {{ include "app.fullname" . }}  
spec:
  hostname: tibero
      #affinity:
      #  nodeAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      nodeSelectorTerms:
      #      - matchExpressions:
      #        - key: kubernetes.io/hostname # worker03~06에만 raid가 설정되어있으므로 해당 노드으로 지정
      #          operator: In
      #          values:
      #          - worker03
  volumes:
  - name: data-volume # 볼륨명
    persistentVolumeClaim:
      claimName: {{ include "app.fullname" . }}-pvc
  containers:
  - name: tibero7  # 컨테이너 이름
    image: "registry.datacentric.kr/handh/tibero7:0.1"
    imagePullPolicy: IfNotPresent
    env:
            # 패스워드 보안을 위하여 Secret 객체를 활용
            # 쿠버네티스에서의 패스워드(Secret) 생성 명령어
            # kubectl create secret generic database-secret -n dev --from-literal=root-password='비밀번호'
            # - name: MARIADB_ROOT_PASSWORD # 패스워드 보안을 위하여 Secret 객체를 활용
            #   valueFrom:
            #     secretKeyRef: # secret 리소스인 database-secret에 저장된 root-password의 값을 불러옴
            #       name: database-secret
            #       key: root-password

    ports: # 컨테이너 내부에서 사용하는 포트 명시
    - name: db-port
      containerPort: 8629
      protocol: TCP
    volumeMounts: # 영구 저장할 볼륨 (디렉토리) 설정
    - name: data-volume # 위에서 명시한 볼륨명 지정
      mountPath: /data
            # - name: config-file # 설정이 필요한 경우
            #   mountPath: /etc/mysql/conf.d # 실제로 사용시 configmap 으로 만들어서 mount할 것
