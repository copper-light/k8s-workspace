# https://hub.docker.com/r/altibase/altibase
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: altibase-sfs # 배포 이름
  labels:
    app: altibase # 배포 이름
spec:
  serviceName: altibase
  replicas: 1
  selector:
    matchLabels:
      app: altibase # 배포 이름
  template:
    metadata:
      labels:
        app: altibase # 배포 이름
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname # worker03~06에만 raid가 설정되어있으므로 해당 노드으로 지정
                operator: In
                values:
                - worker03
                - worker04
                - worker05
                - worker06
      volumes:
        - name: data-volume # 볼륨명
          persistentVolumeClaim:
            claimName: altibase-pvc
      containers:
        - name: altibase  # 컨테이너 이름
          image: "altibase/altibase:latest" # 이미지명 
          imagePullPolicy: IfNotPresent
          env:

            # Altibase에서는 daemon, isql, shell 모드 중 실행 모드를 선택할 수 있음.
            # 쿠버네티스 특성상 isql 또는 shell 처럼 사용자 입력을 받는 대화식 서비스는 데몬 서비스로 인식하지 않기 때문에
            # 반드시 daemon 모드로 실행해야함
            - name: MODE
              value: "daemon"
            
            # USER_ID 가 'sys' 일 경우 패스워드 변경이 되지 않음 (sys 계정의 기본 패스워드: manager)
            # 패스워드를 변경해야할 경우 'sys' 외에 다른 계정명을 사용
#            - name: USER_ID
#              value: "datacentric" 

            # 패스워드 보안을 위하여 Secret 객체를 활용
            # 쿠버네티스에서의 패스워드(Secret) 생성 명령어
            # kubectl create secret generic database-secret --from-literal=root-password='비밀번호' -n 네임스페이스
            - name: USER_PASSWD # 패스워드 보안을 위하여 Secret 객체를 활용 
              valueFrom:
                secretKeyRef: # secret 리소스인 database-secret에 저장된 root-password의 값을 불러옴
                  name: database-secret
                  key: root-password
            
            # - name: USER_PASSWD 
            #   value: "1234!" # 패스워드 직접 명시도 가능

          ports: # 컨테이너 내부에서 사용하는 포트 명시
              - name: db-port
                containerPort: 20300
                protocol: TCP
          volumeMounts: # 영구 저장할 볼륨 (디렉토리) 설정
            - name: data-volume # 위에서 명시한 볼륨명 지정
              mountPath: /home/altibase/altibase_home/dbs
      
---
apiVersion: v1
kind: Service
metadata:
  name: altibase-service # 서비스 이름
spec:
  selector:
    app: altibase # 연결할 Deployment의 이름
  type: LoadBalancer # 서비스 유형 LoadBalancer는 172.17.250.100 ~ 172.17.250.150 중에서 자동 할당하도록 설정되어있음
  ports:
  - name: service-port
    port: 20300 # Pod 내부에서 사용하는 포트 실제 할당된 아이피는 $(kubectl get service -n 네임스페이스) 로 조회
    protocol: TCP
  #externalIPs: # 필요한 경우 아이피 지정 가능 (단, 로드밸런서의 아이피 설정 범위에 한해서)
  #  - 172.17.250.120
